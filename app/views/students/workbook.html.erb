<% content_for :page_script do %>
<script type="text/javascript">
var initHeight;
var finHeight;
var headInitHeight;
var headFinalHeight;
$(function() {
	/****************
			Resource JS
			   ****************/
	initHeight = 27;
	headInitHeight = $("#head_student").css("height");
	headFinHeight = parseInt(headInitHeight) + (finHeight - initHeight);
	finHeight = $("#resource").css("height");
	$("#resource").css("height", initHeight);
	$(document).on("blur", ".question", function() {
		var qid = $(this).attr("name").split("_")[1];
		var sid = <%= @student.id %>;
		var c = $(this).val();
	 	$.ajax({
	 		type: "POST",
	 		url: "<%= answers_url %>",
	 		data: {answer: {student_id: sid, question_id: qid, content: c}, authenticity_token: "<%= form_authenticity_token %>"},
	 		success: function() {
	 			alert("Saved!");
	 		},
	 		error: function() {
	 			alert("Problem saving data...");
	 		}
		});
	});
	$(".drawing").each(function() {
        var tmpID = $(this).attr("id");
        var r = new RoCanvas;
            r.RO(tmpID, {
                "toolbar": {
                   colors: ["pink", "#FFF","#000","#FF0000","#00FF00","#0000FF","#FFFF00","#00FFFF"],
                   custom_color: false,
                   tools: ['path', 'circle', 'rectangle'],
                   sizes: null,
                   saveButton: {"text": "Save drawing"}            
               },
               "settings": {
                   color: 'black'        
               }
           });
	});
	$("#resource_button").on("click", function() {
		if ($("#resource").css("height") == initHeight+"px") {
			$("#resource").animate({"height": finHeight}, 200);
			$("#head_student").animate({"height": headFinHeight}, 200);
		} else {
			$("#resource").animate({"height": initHeight}, 200);
			$("#head_student").animate({"height": headInitHeight}, 200);
		}
	});
	$(document).on("click", ".drawing_save_btn", function() {
		var qid = $(this).attr("id").toString().split("_")[2];
		var sid = <%= @student.id %>;
		var c = document.getElementById("d_"+qid).toDataURL();
		$.ajax({
        	type: "POST",
			url: "<%= answers_url %>",
			data: {answer: {student_id: sid, question_id: qid, content: c}, authenticity_token: "<%= form_authenticity_token %>"},
	 		success: function() {
	 			alert("Saved!");
	 		},
	 		error: function() {
	 			alert("Problem saving data...");
	 		}
		});
	});
	$(document).on("click", ".drawing_redo_btn", function() {
		var num = $(this).data("drawing_id");
		$("#d_"+num).siblings(".completed_drawing").hide();
		$("#d_"+num).show();
		$("#d_"+num).siblings(".drawing_tools").show();
		return false;
	});
	<% if student_signed_in? %>
	loadStudentTimeline();

	<% elsif teacher_signed_in? or admin_signed_in? %>
	$(document).on("blur", ".feedback_txt", function() {
		var qid = $(this).attr("name").split("_")[1];
		var aid = $("#f_"+qid).data("answer_id");
		var f = $(this).val();
		var d = {feedback: {content: f, feedbackable_type: "Answer", feedbackable_id: aid}, authenticity_token: "<%= form_authenticity_token %>"};
	 	saveFeedback(d, $(this).parent(), false);
	});
	$(document).on("click", ".feedback_correct_btn", function() {
		saveStatusFeedback($(this), "correct");
	});
	$(document).on("click", ".feedback_incomplete_btn", function() {
		saveStatusFeedback($(this), "incomplete");
	});
	$(document).on("click", ".feedback_incorrect_btn", function() {
		saveStatusFeedback($(this), "incorrect");
	});
	<% end %>
	populate();
})

function populate() {
	$.getJSON("<%= student_answers_in_lesson_url(@student.id, @lesson.id) %>").success(function(answers) {
		for (var i = 0; i < answers.length; i++) {
			displayAnswer(answers[i]);
			displayFeedback(answers[i]);
		}
	}).error(function(data) {
		console.log("Error fetching answer JSON.");
	});
}
function displayAnswer(answer) {
	switch (answer.question.input_type) {
		case "text":
			$("[name=q_"+answer.question.id+"]").val(answer.content);
			$("[name=q_"+answer.question.id+"]").data({"answer_id": answer.id});
			break;
		case "drawing_base64":
			replaceDrawing(answer);
			break;
		default:
			console.log("Input type not recognized for Answer#"+answer.id);
			break;
	}
}
function replaceDrawing(answer) {
	$("#d_"+answer.question.id).hide();
	$("#d_"+answer.question.id).siblings(".drawing_tools").hide();
	var $img_tag = $('<img>', {src: answer.content});
	var $redo_btn = $('<button>', {class: "drawing_redo_btn", text: "Redo drawing",
			data: {drawing_id: answer.question.id, answer_id: answer.id}})
	var $display_div = $('<div>', {class: "completed_drawing", name: "q_"+answer.question.id, data: {"answer_id": answer.id}});
	$display_div.append($img_tag);
	$display_div.append($redo_btn);
	$("#d_"+answer.question.id).parent().append($display_div);
}
function displayFeedback(answer) {
	var $feedbackDiv = $('<div>', {class: "feedback", id: "f_"+answer.question.id, "data-answer_id": answer.id});
	$("[name=q_"+answer.question.id+"]").after($feedbackDiv);
	// var $lessonFeedbackDiv = $('<div>', {class: feedback, id: "l_<%= @lesson.id %>"})
	<% if student_signed_in? %>
	displayStudentFeedback(answer);
	<% elsif teacher_signed_in? or admin_signed_in? %>
	displayTeacherFeedback(answer);
	<% end %>
}
function displayStudentFeedback(answer) {
	if (answer.feedback) {
		if (answer.feedback.status != null) {
			var feedbackTypes = ["incomplete", "correct", "incorrect"];
			if ($.inArray(answer.feedback.status, feedbackTypes) > -1) {
				var $feedbackImg = $('<img>', {src: "/assets/workspace/"+answer.feedback.status+"_icon.png"})
				$("#f_"+answer.question.id).append($feedbackImg);
			} else {
				console.log("Feedback status not recognized for Answer#"+answer.id);
			}
		}
		if (answer.feedback.content != null) {
			var $feedbackTxt = $('<textarea>', {class: "feedback_txt", name: "f_"+answer.question.id, disabled: "disabled"});
			$feedbackTxt.val(answer.feedback.content);
			$("#f_"+answer.question.id).append($feedbackTxt);
		}
	}
}
function displayTeacherFeedback(answer) {
	<% if teacher_signed_in? or admin_signed_in? %>
	var $feedbackButtonsDiv = $('<div>', {class: "feedback_buttons"});
	var $correctBtn = $('<img>', {src: "/assets/workspace/correct_button.png", class: "feedback_correct_btn"});
	var $incompleteBtn = $('<img>', {src: "/assets/workspace/incomplete_button.png", class: "feedback_incomplete_btn"});
	var $incorrectBtn = $('<img>', {src: "/assets/workspace/incorrect_button.png", class: "feedback_incorrect_btn"});

	var $feedbackEditorTxt = $('<textarea>', {class: "feedback_txt", name: "f_"+answer.question.id});
	var $feedbackEditorDiv = $('<div>', {class: "feedback_editor"});
	$feedbackButtonsDiv.append($correctBtn, $incompleteBtn, $incorrectBtn);
	$feedbackEditorDiv.append($feedbackButtonsDiv, $feedbackEditorTxt);
	
	if (answer.feedback) {
		if (answer.feedback.content != null) {
			$feedbackEditorTxt.val(answer.feedback.content);
		}
		if (answer.feedback.status != null) {
			$feedbackButtonsDiv.children(".feedback_"+answer.feedback.status+"_btn").addClass("selected_feedback");
		}
	}

	$("[name=q_"+answer.question.id+"]").siblings(".feedback").append($feedbackEditorDiv);
	<% end %>
}
function saveStatusFeedback(btn, val) {
	var qid = btn.parent().siblings(".feedback_txt").attr("name").split("_")[1];
	var aid = $("#f_"+qid).data("answer_id");
	var d = {feedback: {status: val, feedbackable_type: "Answer", feedbackable_id: aid}, authenticity_token: "<%= form_authenticity_token %>"};
	saveFeedback(d, btn.parent(), ".feedback_"+val+"_btn");
}
function saveFeedback(d, btns, selected) {
	<% if teacher_signed_in? or admin_signed_in? %>
	$.ajax({
 		type: "POST",
 		url: "<%= feedbacks_path %>",
 		data: d,
 		success: function() {
 			console.log(btns);
 			if (selected) {
 				console.log("Selected!");
 				btns.children("img").removeClass("selected_feedback");
				btns.children(selected).addClass("selected_feedback");
 			}
 		},
 		error: function() {
 			console.log("Problem saving data...");
 		}
	});
	<% end %>
}
function loadStudentTimeline() {
	$.getJSON("<%= around_lesson_student_milestones_url(@student, @lesson) %>").success(function(lessons) {
		displayStudentTimeline(lessons);
	}).error(function(data) {
		console.log("Error fetching answer JSON.");
	});
}
function displayStudentTimeline(lessons) {
	var timeline_width = $("#timeline_overlay").width();
	var lesson_width = timeline_width / lessons.length;

	for (i = 0; i < lessons.length; i++) {
		var lesson = lessons[i];
		var $div = $('<div>', {class: "timeline_lesson", id: "lesson"+(i+1)});
		$div.css("width", lesson_width);

		if (lesson.milestones.length > 0) {
			console.log("Displaying lesson...");
			console.log(lesson);
			if (lesson.milestones[0].status == "correct") {
				$div.css({
					"background-color": "#1EA62B",
					"backgroundImage": "url('<%= image_url 'workspace/timeline_break.png' %>')"
				});
			} else if (lesson.milestones[0].status == "incomplete") {
				$div.css({
					"background-color": "#E0CA05",
					"backgroundImage": "url('<%= image_url 'workspace/timeline_break.png' %>')"
				});
			} else if (lesson.milestones[0].status == "incorrect") {
				$div.css({
					"background-color": "#ff0000",
					"backgroundImage": "url('<%= image_url 'workspace/timeline_break.png' %>')"
				});
			} else {
				console.log("Unrecognized milestone status on lesson #"+lesson.id);
			}
		} else {
			$div.css({
				"background-color": "none",
				"backgroundImage": "url('<%= image_url 'workspace/timeline_break.png' %>')",
				"backgroundRepeat": "no-repeat"
			});
		}
		var $num_img = $('<img>', {src: "/assets/workspace/number(0"+lesson.number+").png"});
		var $header1 = $('<h1>', {text: "Lesson "+lesson.number});
		var $header2 = $('<h2>', {text: lesson.title});
		$div.append($num_img);
		$div.append($header1);
		$div.append($header2);
		$('#timeline_lessons').append($div);
	}
}

</script>
<% end %>

<%= @workbook_content.html_safe %>